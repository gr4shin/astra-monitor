#!/usr/bin/env python3
"""
–°–±–æ—Ä–∫–∞ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–≥–æ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞ –±–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
"""

import subprocess
import sys
import os
import shutil
import json

def create_config_file(data: dict, path: str):
    """–°–æ–∑–¥–∞–µ—Ç —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ JSON."""
    with open(path, "w", encoding="utf-8") as f:
        json.dump(data, f, indent=4, ensure_ascii=False)

def install_pyinstaller():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ PyInstaller"""
    print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PyInstaller...")
    subprocess.check_call([sys.executable, "-m", "pip", "install", "pyinstaller"])

def build_standalone(build_config=None):
    """–°–±–æ—Ä–∫–∞ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–≥–æ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞"""
    print("üî® –°–±–æ—Ä–∫–∞ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞...")
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º python -m PyInstaller –¥–ª—è –∫—Ä–æ—Å—Å-–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–æ–π —Å–±–æ—Ä–∫–∏ –∏–∑ venv
    pyinstaller_cmd = [sys.executable, "-m", "PyInstaller"]
    
    options = [
        "--name=astra-monitor-server",
        "--onefile",
        "--windowed", # –î–ª—è GUI-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        # –°–∫—Ä—ã—Ç—ã–µ –∏–º–ø–æ—Ä—Ç—ã –¥–ª—è PyQt5 –∏ –¥—Ä—É–≥–∏—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
        "--hidden-import=PyQt5.sip",
        "--hidden-import=PyQt5.QtWidgets",
        "--hidden-import=PyQt5.QtGui",
        "--hidden-import=PyQt5.QtCore",
        "--hidden-import=websockets",
        "--hidden-import=pkg_resources.py2_warn",
        "--clean",
        "--noconfirm",
    ]

    # –î–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É –¥–ª—è –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å.
    # PyInstaller –º–æ–∂–µ—Ç —Å–∞–º –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å PNG –≤ ICO/ICNS, –µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω Pillow.
    icon_path = "icon.ico"
    if os.path.exists(icon_path):
        print(f"üñºÔ∏è  –ù–∞–π–¥–µ–Ω–∞ –∏–∫–æ–Ω–∫–∞: {icon_path}. –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–±–æ—Ä–∫—É.")
        options.append(f"--icon={icon_path}")
    else:
        print("‚ö†Ô∏è  –§–∞–π–ª –∏–∫–æ–Ω–∫–∏ 'icon.ico' –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª –±—É–¥–µ—Ç –±–µ–∑ –∏–∫–æ–Ω–∫–∏.")
    
    temp_assets_dir = "build_server_assets"
    try:
        if build_config:
            os.makedirs(temp_assets_dir, exist_ok=True)
            config_file_path = os.path.join(temp_assets_dir, "server_config.json")
            create_config_file(build_config, config_file_path)
            
            # PyInstaller –∏—Å–ø–æ–ª—å–∑—É–µ—Ç ':' –∫–∞–∫ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –Ω–∞ –≤—Å–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö
            # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ –∫–æ—Ä–µ–Ω—å –±–∞–Ω–¥–ª–∞
            options.append(f"--add-data={config_file_path}:.")
            print(f"‚öôÔ∏è –í–Ω–µ–¥—Ä–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {build_config}")

        # –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞
        entry_point = "astra_monitor_server/main.py"
        full_command = pyinstaller_cmd + options + [entry_point]
        
        print("–ü–æ–ª–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —Å–±–æ—Ä–∫–∏:", " ".join(full_command))
        subprocess.check_call(full_command)

    finally:
        # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å –∞—Å—Å–µ—Ç–∞–º–∏
        if build_config and os.path.exists(temp_assets_dir):
            shutil.rmtree(temp_assets_dir)
            print("üóëÔ∏è –í—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π —É–¥–∞–ª–µ–Ω–∞.")

    print("[OK] –°–±–æ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    executable_path = f"./dist/astra-monitor-server{'.exe' if sys.platform == 'win32' else ''}"
    if os.path.exists(executable_path):
        print(f"üìÅ –ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª: {executable_path}")
        print(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {os.path.getsize(executable_path) / 1024 / 1024:.1f} MB")
    else:
        print("[ERROR] –ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ ./dist/")


def install_dependencies():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Å–µ—Ä–≤–µ—Ä–∞...")
    dependencies = ["websockets", "PyQt5", "Pillow"]
    
    for dep in dependencies:
        try:
            __import__(dep.split('==')[0])
            print(f"[OK] {dep} —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except ImportError:
            print(f"üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º {dep}...")
            subprocess.check_call([sys.executable, "-m", "pip", "install", dep])

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –°–±–æ—Ä–∫–∞ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")
    print("=" * 50)
    
    try:
        install_dependencies()
        try:
            subprocess.check_call([sys.executable, "-m", "PyInstaller", "--version"],
                                stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
            print("[OK] PyInstaller —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except (subprocess.CalledProcessError, FileNotFoundError):
            install_pyinstaller()
        
        print("\n" + "-"*20)
        print("–í–Ω–µ–¥—Ä–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ —Å–µ—Ä–≤–µ—Ä (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)")
        
        while not (server_ip := input("–í–≤–µ–¥–∏—Ç–µ IP-–∞–¥—Ä–µ—Å –¥–ª—è –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, 0.0.0.0): ").strip()):
            print("‚ùå IP-–∞–¥—Ä–µ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.")
        
        while not (server_port_str := input("–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä—Ç –¥–ª—è –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, 8765): ").strip()):
            print("‚ùå –ü–æ—Ä—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.")

        while not (auth_token := input("–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: ").strip()):
            print("‚ùå –¢–æ–∫–µ–Ω –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.")

        print("-" * 20 + "\n")

        build_config = {
            "SERVER_HOST": server_ip,
            "AUTH_TOKEN": auth_token
        }
        try:
            build_config["SERVER_PORT"] = int(server_port_str)
        except ValueError:
            print(f"[ERROR] –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø–æ—Ä—Ç–∞: '{server_port_str}'. –°–±–æ—Ä–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞.")
            sys.exit(1)
        
        build_standalone(build_config)
        
        print("\n" + "=" * 50)
        print("[SUCCESS] –°–±–æ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()
#!/usr/bin/env python3
"""
–°–±–æ—Ä–∫–∞ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–≥–æ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞ –∏ .deb –ø–∞–∫–µ—Ç–∞ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞
"""

import subprocess
import sys
import os
import shutil
import json
import base64
import tempfile
import re
from pathlib import Path

OBFUSCATION_KEY = "AstraMonitorKey2024!@#" # –ö–ª—é—á –¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –∫–ª—é—á–æ–º –≤ client_monitor.py

def get_version():
    """–ß–∏—Ç–∞–µ—Ç –≤–µ—Ä—Å–∏—é –∏–∑ —Ñ–∞–π–ª–∞ astra_monitor_client/main.py."""
    try:
        main_py_path = Path(__file__).parent / "astra_monitor_client" / "main.py"
        main_py_content = main_py_path.read_text(encoding="utf-8")
        match = re.search(r"^CLIENT_VERSION\s*=\s*[\"\"](.*?)[\"\"]", main_py_content, re.MULTILINE)
        if match:
            return match.group(1)
    except Exception as e:
        print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –≤–µ—Ä—Å–∏—é –∏–∑ main.py: {e}")
    
    print("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–µ—Ä—Å–∏—é, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è 0.0.0-fallback")
    return "all"

def obfuscate_config(data: dict, key: str) -> str:
    """–û–±—É—Å—Ü–∏—Ä—É–µ—Ç —Å–ª–æ–≤–∞—Ä—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ —à–∏—Ñ—Ä–æ—Ç–µ–∫—Å—Ç."""
    json_str = json.dumps(data).encode('utf-8')
    b64_bytes = base64.b64encode(json_str)
    
    xored_bytes = bytearray()
    for i, byte in enumerate(b64_bytes):
        xored_bytes.append(byte ^ ord(key[i % len(key)]))
        
    final_b64_str = base64.b64encode(bytes(xored_bytes)).decode('ascii')
    return final_b64_str

def install_pyinstaller():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ PyInstaller"""
    print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PyInstaller...")
    subprocess.check_call([sys.executable, "-m", "pip", "install", "pyinstaller"])

def build_standalone(build_config=None):
    """–°–±–æ—Ä–∫–∞ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–≥–æ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞"""
    print("üî® –°–±–æ—Ä–∫–∞ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞...")
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º python -m PyInstaller –¥–ª—è –∫—Ä–æ—Å—Å-–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–æ–π —Å–±–æ—Ä–∫–∏ –∏–∑ venv
    pyinstaller_cmd = [sys.executable, "-m", "PyInstaller"]
    
    options = [
        "--name=astra-monitor-client",
        "--onefile",
    ]

    if sys.platform == "win32":
        options.append("--windowed")
    else:
        options.append("--console")

    options.extend([
        "--hidden-import=websockets",
        "--hidden-import=pyautogui",
        "--hidden-import=psutil",
        "--hidden-import=pkg_resources.py2_warn", # –î–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    ])

    if sys.platform == "win32":
        options.extend([
            "--hidden-import=WMI",
        ])
    
    options.extend([
        "--clean",
        "--noconfirm",
    ])
    
    temp_assets_dir = "build_assets"
    try:
        if build_config:
            os.makedirs(temp_assets_dir, exist_ok=True)
            config_file_path = os.path.join(temp_assets_dir, "config.dat")

            obfuscated_data = obfuscate_config(build_config, OBFUSCATION_KEY)
            with open(config_file_path, "w", encoding="utf-8") as f:
                f.write(obfuscated_data)
            
            # PyInstaller –∏—Å–ø–æ–ª—å–∑—É–µ—Ç ':' –∫–∞–∫ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –Ω–∞ –≤—Å–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö
            # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é 'build_assets' –∫–∞–∫ 'assets' –≤ –±–∞–Ω–¥–ª
            options.append(f"--add-data={temp_assets_dir}:assets")
            print(f"‚öôÔ∏è –í–Ω–µ–¥—Ä–µ–Ω–∏–µ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {build_config}")

        full_command = pyinstaller_cmd + options + ["astra_monitor_client/main.py"]
        subprocess.check_call(full_command)

    finally:
        # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å –∞—Å—Å–µ—Ç–∞–º–∏
        if build_config and os.path.exists(temp_assets_dir):
            shutil.rmtree(temp_assets_dir)
            print("üóëÔ∏è –í—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π —É–¥–∞–ª–µ–Ω–∞.")

    print("[OK] –°–±–æ—Ä–∫–∞ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    executable_path = Path("./dist/astra-monitor-client")
    if sys.platform == "win32":
        executable_path = executable_path.with_suffix(".exe")

    if executable_path.exists():
        print(f"üìÅ –ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª: {executable_path}")
        print(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {executable_path.stat().st_size / 1024 / 1024:.1f} MB")
        return executable_path
    else:
        print("[ERROR] –ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return None

def create_deb_package(executable_path: Path):
    """–°–æ–∑–¥–∞–Ω–∏–µ .deb –ø–∞–∫–µ—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–±—Ä–∞–Ω–Ω–æ–≥–æ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞."""
    if not executable_path or not executable_path.exists():
        print("[ERROR] –ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª –∫–ª–∏–µ–Ω—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–ø—É—Å–∫ —Å–æ–∑–¥–∞–Ω–∏—è .deb –ø–∞–∫–µ—Ç–∞.")
        return None

    print("\n" + "=" * 20)
    print("üì¶ –°–æ–∑–¥–∞–Ω–∏–µ .deb –ø–∞–∫–µ—Ç–∞...")
    
    temp_dir = Path(tempfile.mkdtemp())
    version = get_version()
    package_name = f"astra-monitor-client_{version}_amd64"
    package_dir = temp_dir / package_name
    
    # –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–∞—Ç–∞–ª–æ–≥–æ–≤
    debian_dir = package_dir / "DEBIAN"
    usr_bin_dir = package_dir / "usr" / "local" / "bin"
    
    debian_dir.mkdir(parents=True, exist_ok=True)
    usr_bin_dir.mkdir(parents=True, exist_ok=True)
    
    # –ö–æ–ø–∏—Ä—É–µ–º –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª
    target_executable = usr_bin_dir / "astra-monitor-client"
    shutil.copy2(executable_path, target_executable)
    target_executable.chmod(0o755)
    
    # –°–æ–∑–¥–∞–µ–º control —Ñ–∞–π–ª
    control_content = f"""Package: astra-monitor-client
Version: {version}
Section: admin
Priority: optional
Architecture: amd64
Maintainer: gr4shin <admin@gr4shin.ru>
Description: –ö–ª–∏–µ–Ω—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–ª—è Astra Linux
 –ê–≤—Ç–æ–Ω–æ–º–Ω—ã–π –∫–ª–∏–µ–Ω—Ç –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
"""
    (debian_dir / "control").write_text(control_content, encoding="utf-8")
    
    # –°–æ–∑–¥–∞–µ–º postinst —Å–∫—Ä–∏–ø—Ç
    postinst_content = """#!/bin/bash
# Post-installation script

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∫–æ–Ω—Ñ–∏–≥–∞, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
mkdir -p /etc/astra-monitor-client

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
chmod 755 /usr/local/bin/astra-monitor-client

# –°–æ–∑–¥–∞–µ–º —Å–ª—É–∂–±—É systemd
cat > /etc/systemd/system/astra-monitor.service << 'EOL'
[Unit]
Description=Astra Linux Monitor Client
After=network.target

[Service]
Type=simple
ExecStart=/usr/local/bin/astra-monitor-client
Restart=always
RestartSec=5
User=root

[Install]
WantedBy=multi-user.target
EOL

systemctl daemon-reload
systemctl enable astra-monitor.service
systemctl start astra-monitor.service

echo "–ö–ª–∏–µ–Ω—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω"
"""
    postinst_path = debian_dir / "postinst"
    postinst_path.write_text(postinst_content, encoding="utf-8")
    postinst_path.chmod(0o755)
    
    # –°–æ–∑–¥–∞–µ–º prerm —Å–∫—Ä–∏–ø—Ç
    prerm_content = """#!/bin/bash
# Pre-removal script

systemctl stop astra-monitor.service 2>/dev/null || true
systemctl disable astra-monitor.service 2>/dev/null || true
rm -f /etc/systemd/system/astra-monitor.service 2>/dev/null || true
systemctl daemon-reload 2>/dev/null || true
"""
    prerm_path = debian_dir / "prerm"
    prerm_path.write_text(prerm_content, encoding="utf-8")
    prerm_path.chmod(0o755)
    
    # –°–æ–±–∏—Ä–∞–µ–º .deb –ø–∞–∫–µ—Ç
    original_dir = Path.cwd()
    os.chdir(temp_dir)
    
    deb_file_path = None
    try:
        subprocess.run(
            ["dpkg-deb", "--build", package_name], 
            capture_output=True, text=True, check=True
        )
        
        deb_file_name = f"{package_name}.deb"
        created_deb_file = Path(deb_file_name)
        
        if created_deb_file.exists():
            target_path = original_dir / deb_file_name
            shutil.copy2(created_deb_file, target_path)
            print(f"[OK] .deb –ø–∞–∫–µ—Ç —Å–æ–∑–¥–∞–Ω: {target_path}")
            print(f"üìä –†–∞–∑–º–µ—Ä –ø–∞–∫–µ—Ç–∞: {target_path.stat().st_size / 1024 / 1024:.1f} MB")
            deb_file_path = target_path
        else:
            raise FileNotFoundError("DEB —Ñ–∞–π–ª –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω")
            
    except subprocess.CalledProcessError as e:
        print(f"–û—à–∏–±–∫–∞ dpkg-deb: {e.stderr}")
        raise
    finally:
        os.chdir(original_dir)
        shutil.rmtree(temp_dir)
    
    return deb_file_path

def install_dependencies():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    dependencies = [
        "websockets", 
        "pyautogui",
        "psutil",
    ]
    if sys.platform == "win32":
        dependencies.append("WMI")

    for dep in dependencies:
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ª–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å
            __import__(dep)
            print(f"[OK] {dep} —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except ImportError:
            print(f"üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º {dep}...")
            subprocess.check_call([sys.executable, "-m", "pip", "install", dep])

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –°–±–æ—Ä–∫–∞ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")
    print("=" * 50)
    
    try:
        install_dependencies()
        try:
            subprocess.check_call([sys.executable, "-m", "PyInstaller", "--version"],
                                stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
            print("[OK] PyInstaller —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except:
            install_pyinstaller()
        
        print("\n" + "-"*20)
        print("–í–Ω–µ–¥—Ä–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ –∫–ª–∏–µ–Ω—Ç (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)")

        while not (server_ip := input("–í–≤–µ–¥–∏—Ç–µ IP-–∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞: ").strip()):
            print("‚ùå IP-–∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.")

        while not (server_port_str := input("–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä—Ç —Å–µ—Ä–≤–µ—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 8765): ").strip()):
            print("‚ùå –ü–æ—Ä—Ç —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.")

        while not (auth_token := input("–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: ").strip()):
            print("‚ùå –¢–æ–∫–µ–Ω –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.")

        print("-" * 20 + "\n")

        build_config = {
            "server_host": server_ip,
            "auth_token": auth_token,
        }
        try:
            build_config["server_port"] = int(server_port_str)
        except ValueError:
            print(f"[ERROR] –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø–æ—Ä—Ç–∞: '{server_port_str}'. –°–±–æ—Ä–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞.")
            sys.exit(1)
        
        executable_path = build_standalone(build_config)

        if executable_path:
            if sys.platform != "win32":
                create_deb = input("\n–°–æ–∑–¥–∞—Ç—å .deb –ø–∞–∫–µ—Ç? (y/n): ").strip().lower()
                if create_deb == 'y':
                    deb_path = create_deb_package(executable_path)
                    if deb_path:
                        print("\n" + "=" * 50)
                        print("[SUCCESS] –°–±–æ—Ä–∫–∞ –¥–ª—è Linux –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
                        print(f"üìÅ –ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª: {executable_path}")
                        print(f"üì¶ –ü–∞–∫–µ—Ç –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏: {deb_path}")
                        print("\n–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–∞:")
                        print(f"  sudo dpkg -i {deb_path}")
                        print("  sudo apt-get install -f  # –µ—Å–ª–∏ –Ω—É–∂–Ω—ã –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
                        print("\n–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è:")
                        print("  sudo dpkg -r astra-monitor-client")
                    else:
                        print("\n[WARN] –°–±–æ—Ä–∫–∞ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å .deb –ø–∞–∫–µ—Ç.")
                else:
                    print("\n" + "=" * 50)
                    print("[SUCCESS] –°–±–æ—Ä–∫–∞ –¥–ª—è Linux –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
                    print(f"üìÅ –ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª: {executable_path}")
                    print("–°–æ–∑–¥–∞–Ω–∏–µ .deb –ø–∞–∫–µ—Ç–∞ –ø—Ä–æ–ø—É—â–µ–Ω–æ.")
            else:
                print("\n" + "=" * 50)
                print("[SUCCESS] –°–±–æ—Ä–∫–∞ –¥–ª—è Windows –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
                print(f"üìÅ –ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª: {executable_path}")
                print("\n–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É:")
                print("1. –ù–∞–∂–º–∏—Ç–µ Win + R")
                print("2. –í–≤–µ–¥–∏—Ç–µ shell:startup –∏ –Ω–∞–∂–º–∏—Ç–µ Enter.")
                print("3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ —è—Ä–ª—ã–∫ –¥–ª—è —Ñ–∞–π–ª–∞ astra-monitor-client.exe –≤ –æ—Ç–∫—Ä—ã–≤—à—É—é—Å—è –ø–∞–ø–∫—É.")

        else:
             raise Exception("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª.")
        
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()
